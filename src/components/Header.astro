---
import logo from "../images/Logo.svg"
import hamburger from "../images/hamburger.svg"
import ThemeIcon from "./ThemeToggle.astro";

interface Props {
    translationAddress: string;
}

const currentPath = new URL(Astro.request.url).pathname;
let guides;
let stdlib;

if(currentPath.startsWith("/en")){
    const content = await Astro.glob('../pages/en/*.md');
    guides = content.map(file => ({
        href: file.url,
        text: file.frontmatter.title,
        index: file.frontmatter.index
    }));
    const stdlibMarkdown = await Astro.glob('../pages/en/stdlib/*.md');
    stdlib = stdlibMarkdown.map(file => ({
        href: file.url,
        text: file.frontmatter.title,
        index: file.frontmatter.index
    }));
}
else {
    const content = await Astro.glob('../pages/*.md');
    guides = content.map(file => ({
        href: file.url,
        text: file.frontmatter.title,
        index: file.frontmatter.index
    }));
    const stdlibMarkdown = await Astro.glob('../pages/stdlib/*.md');
    stdlib = stdlibMarkdown.map(file => ({
        href: file.url,
        text: file.frontmatter.title,
        index: file.frontmatter.index
    }));
}

guides.sort((a, b) => a.index - b.index);

const { translationAddress } = Astro.props;
---

<header>
    <div id="bosscript-logo">
        <img id="hamburger" src={hamburger} alt="Hamburger menu" width="24">
        <img src={logo} alt="Bosscript logo" width="32">
        <h1>Bosscript</h1>
    </div>


    <div id="utils">
        <label for="language-picker">
            <img src={currentPath.startsWith("/en") ? "/english.svg" : "/bosnian.svg"}>
            <select id="language-picker" data-translation={translationAddress}>
                <option selected={currentPath.startsWith("/en")} value="en">
                    English
                </option>
                <option selected={!currentPath.startsWith("/en")} value="ba">
                    Bosanski
                </option>
            </select>
        </label>
        <ThemeIcon/>
    </div>
</header>
<nav>
    <details open={!currentPath.includes("stdlib")}>
        <summary>Basics</summary>
        <ul>
            {guides.map(link => (
                    <li>
                        <a
                                href={link.href}
                                data-link
                                class={currentPath === link.href ? "active" : ""}
                        >
                            {link.text}
                        </a>
                    </li>
            ))}
        </ul>
    </details>

    <details open={currentPath.includes("stdlib")}>
        <summary>Standard Library</summary>
        <ul>
            {stdlib.map(link => (
                    <li>
                        <a
                                href={link.href}
                                data-link
                                class={currentPath === link.href ? "active" : ""}
                        >
                            {link.text}
                        </a>
                    </li>
            ))}
        </ul>
    </details>
</nav>

<script>
    const hamburger = document.querySelector("#hamburger");
    const nav = document.querySelector("nav");
    const languagePicker = document.querySelector("#language-picker");


    languagePicker.addEventListener("change", (e) => {
        const selectedLanguage = e.target.value;
        localStorage.setItem('lang', selectedLanguage);
        window.location.pathname = languagePicker.dataset["translation"];
    })

    hamburger.addEventListener('click', () => {
        nav.classList.toggle("open");
    });
</script>

<style>
    header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: var(--background-dark);
        padding: 0.5rem 1rem;
        position: fixed;
        z-index: 2;
        top: 0;
        width: 100%;
        height: 4rem;
        box-shadow: var(--shadow);
        border-bottom: var(--code-border);
    }

    header h1 {
        margin: 0;
    }

    #bosscript-logo{
        cursor: pointer;
        user-select: none;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    nav {
        width: 0;
        overflow: hidden;
        transition: width 0.5s;
        position: fixed;
        z-index: 2;
        top:4rem;
        left:0;
        height: 100vh;
        background-color: var(--background-dark);
        box-shadow: var(--shadow);
        overflow-y: auto;
    }

    .open {
        width: 18%;
        opacity: 1;
        border-right: var(--code-border);
    }

    nav ul {
        padding: 0;
        margin: 0;
    }

    nav li {
        padding: 1rem 1rem;
        list-style: none;
    }

    nav li a {
        text-decoration: none;
        color: var(--text);
        font-weight: bolder;
        font-size: 1rem;
        margin-left: 1.5rem;
    }

    nav li a:hover{
        border-bottom: 2px solid var(--active);
    }

    nav summary{
        padding: 1rem;
    }

    .active {
        color: var(--active);
        border-bottom: 2px solid var(--active);
    }

    #hamburger{
        color: var(--text);
    }

    #hamburger:hover {
        box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);
    }

    #utils{
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    #utils label {
        display: flex;
        padding: 0.5rem 0.75rem;
        border-radius: 4px;
        border: 1px solid var(--button-border);
        color: var(--text);
        background-color: var(--background);
        outline: none;
    }

    #utils select{
        display: inline-block;
        background: none;
        border: none;
        outline: none;
        color: var(--text);
    }

    #utils label:hover{
        background-color: rgba(123, 127, 134, 0.65);
    }

    #utils option {
        background-color: var(--background);
        color: var(--text);
    }

    #utils label img {
        max-height: 1.5rem;
    }

    @media (max-width: 480px) {
        header{
            height: 4rem;
        }
        nav {
            top: 4rem;
            height: 100%;
        }

        .open {
            width: 100%;
        }

        #utils select{
            max-width: 2ch;
        }
    }
</style>